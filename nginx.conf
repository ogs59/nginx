
user  www www;

#nginx 进程数，建议按照cpu 数目来指定，一般为它的倍数 (如,2个四核的cpu计为8)
worker_processes  8;

#为每个进程分配cpu，上例中将8 个进程分配到8 个cpu，当然可以写多个，或者将一个进程分配到多个cpu
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;
#worker_cpu_affinity 00000001 00000010 00000100 00001000;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  /data/log/nginx/nginx_error.log  crit;
#error_log  /data/log/nginx/nginx_error.log  debug;

#pid        logs/nginx.pid;

#这个指令是指当一个nginx 进程打开的最多文件描述符数目，理论值应该是最多打开文
#件数（ulimit -n）与nginx 进程数相除，但是nginx 分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。
#现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。
#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。
#查看linux系统文件描述符的方法：
#sysctl -a | grep fs.file
worker_rlimit_nofile 60000; #60000/4

#使用epoll 的I/O 模型
#与apache相类，nginx针对不同的操作系统，有不同的事件模型
#A）标准事件模型 : Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll
#B）高效事件模型 : Kqueue：使用于 FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X. 使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。Epoll:使用于Linux内核2.6版本及以后的系统。/dev/poll：使用于 Solaris 7 11/99+, HP/UX 11.22+ (eventport), IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。Eventport：使用于 Solaris 10. 为了防止出现内核崩溃的问题， 有必要安装安全补丁。
events {
    use epoll;
    worker_connections  60000;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    client_body_temp_path /tmp/nginx_client_body_temp;
    fastcgi_temp_path /tmp/nginx_fastcgi_temp;
    proxy_temp_path /tmp/nginx_proxy_temp;
    scgi_temp_path /tmp/nginx_scgi_temp;
    uwsgi_temp_path /tmp/nginx_uwsgi_temp;

    server_names_hash_bucket_size 128;
    #client_header_buffer_size 32k;
    #large_client_header_buffers 4 32k;
    client_max_body_size 100m;
    client_body_buffer_size 10m; #影响手机端gzip压缩上传数据

    sendfile on;
    tcp_nopush     on;

    keepalive_timeout 120;

    tcp_nodelay on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 2 256k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;

    gzip on;
    gzip_min_length  1k; #至少要内容达到1000字节才进行压缩
    gzip_buffers     4 16k;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/json application/xml text/javascript;
    gzip_vary on;
    gzip_http_version 1.0; #这个是关键
    gunzip on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format logstash '$http_host $server_addr $remote_addr [$time_local] "$request" $request_body $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time';

    #access_log  logs/access.log  main;

    #tcp_nopush     on;

    #keepalive_timeout  0;

    #gzip  on;

    include server/*;

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
